#pragma once

#include <QtEntityUtils/Export>
#include <QWidget>
#include <QtEntity/DataTypes>
#include <QVariantMap>

class QtVariantPropertyManager;
class QtTreePropertyBrowser;

namespace QtEntity
{
    class EntityManager;
}

namespace QtEntityUtils
{
    class QTENTITYUTILS_EXPORT EntityEditor : public QWidget
    {
    Q_OBJECT
    public:
        EntityEditor();

        static QVariant fetchEntityData(const QtEntity::EntityManager& em, QtEntity::EntityId);
        static void applyEntityData(QtEntity::EntityManager& em, QtEntity::EntityId eid, const QString& componenttype, const QString& propertyname, const QVariant& value);

    public slots:

        void displayEntity(QtEntity::EntityId id, const QVariant& data);
        void clear();

    signals:

        void entityDataChanged(QtEntity::EntityId id, const QString& componenttype, const QString& propertyname, const QVariant& value);

    private:

        QtEntity::EntityId _entityId;
        QtVariantPropertyManager* _propertyManager;
        QtTreePropertyBrowser* _editor;

    };
}
