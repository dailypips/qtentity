#pragma once

#include <QtEntity/DataTypes>
#include <QtEntity/PooledEntitySystem>
#include <QObject>

class MetaDataSystem;

class MetaData : public QtEntity::Component
{
    DECLARE_COMPONENT_TYPE(NOEXP)    

    friend class MetaDataSystem;

 public:

    MetaData();

    /**
     * Set entity name (human readable identifier)
     * Causes MetaDataSystem to emit entityChanged signal
     **/
    void setName(const QString& name);

    /**
     * Get entity name (human readable identifier)
     **/
    QString name() const  { return _name; }

    /**
     * Set additional info to be displayed in a table.
     * Format: key1=value2;key2=value2;...
     * Causes MetaDataSystem to emit entityChanged signal
     **/
    void setAdditionalInfo(const QString& info);

    /**
     * Get additional info to be displayed in a table.
     * Format: key1=value2;key2=value2;...
     **/
    QString additionalInfo() const  { return _info; }


private:
    QtEntity::EntityId _entityId;
    QString _name;
    QString _info;
    MetaDataSystem* _system;
};


class MetaDataSystem 
    : public QtEntity::PooledEntitySystem<MetaData>
{   
    Q_OBJECT
public:
    typedef QtEntity::PooledEntitySystem<MetaData> BaseClass;
    MetaDataSystem(QtEntity::EntityManager* em);

    // override to emit signal for creating entity list entry
    virtual QtEntity::Component* createComponent(QtEntity::EntityId id, const QVariantMap& propertyVals = QVariantMap()) override;

    // override to emit signal for removing entity list entry
    virtual bool destroyComponent(QtEntity::EntityId id) override;

    virtual QVariantMap toVariantMap(QtEntity::EntityId eid, int context = QtEntity::EntitySystem::EDIT_ALL) override;
    virtual void fromVariantMap(QtEntity::EntityId eid, const QVariantMap& m, int context = QtEntity::EntitySystem::EDIT_ALL) override;

signals:

    void entityAdded(QtEntity::EntityId id, QString name, QString additionalInfo);
    void entityRemoved(QtEntity::EntityId id);
    void entityChanged(QtEntity::EntityId id, QString name, QString additionalInfo);

};

