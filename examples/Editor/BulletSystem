#pragma once

#include <QtEntity/PooledEntitySystem>
#include <QRect>

class Bullet : public QtEntity::Component
{
    DECLARE_COMPONENT_TYPE(NOEXP)    

public:
    Bullet() { }

    void setMovement(const QPoint& m) { _movement = m; }
    QPoint movement() const { return _movement; }

private:
    QPoint _movement;
};


class BulletSystem : public QtEntity::PooledEntitySystem<Bullet>
{   
    typedef QtEntity::PooledEntitySystem<Bullet> BaseClass;
public:
    BulletSystem(QtEntity::EntityManager* em);

    void step(int frameNumber, int totalTime, int delta);

    virtual QVariantMap toVariantMap(QtEntity::EntityId eid) override;
    virtual void fromVariantMap(QtEntity::EntityId eid, const QVariantMap& m) override;
    
};
