#pragma once

#include <QtEntity/PooledEntitySystem>
#include <QRect>

class Enemy : public QtEntity::Component
{
    DECLARE_COMPONENT_TYPE(NOEXP)    

public:

    Enemy() 
        : _lifetime(0) 
    {       
    }

    void setLifetime(int v) { _lifetime = v; }
    int lifetime() const { return _lifetime; }     

private:

    int _lifetime;

};


class EnemySystem : public QtEntity::PooledEntitySystem<Enemy>
{
public:
    typedef QtEntity::PooledEntitySystem<Enemy> BaseClass;
    EnemySystem(QtEntity::EntityManager* em);
    
    virtual QVariantMap toVariantMap(QtEntity::EntityId eid) override;
    virtual void fromVariantMap(QtEntity::EntityId eid, const QVariantMap& m) override;

    void step(int frameNumber, int totalTime, int delta);

};
