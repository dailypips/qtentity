#pragma once

#include <QMainWindow>
#include "ui_MainWindow.h"
#include <QtEntity/DataTypes>
#include <QThread>

class Game;
class Renderer;

class MainWindow : public QMainWindow, public Ui_MainWindow
{
    Q_OBJECT

public:

    MainWindow();
    ~MainWindow();

    void keyPressEvent ( QKeyEvent * event );
    void keyReleaseEvent ( QKeyEvent * event );
    bool eventFilter(QObject *obj, QEvent *event);
protected slots:

    void entityAdded(QtEntity::EntityId id, QString name);
    void entityNameChanged(QtEntity::EntityId id, QString name);
    void entityRemoved(QtEntity::EntityId id);
    void entitySelectionChanged();
    void prefabSelectionChanged(QListWidgetItem * item);
    void changeEntityData(QtEntity::EntityId id, const QVariantMap& values);
    void prefabAdded(const QString&);
    void addPrefabInstance();
    void stepGame();

signals:

    void selectedEntityChanged(QtEntity::EntityId id, const QVariantMap& data, const QVariantMap& attributes);

private:

    QThread _gameThread;
    QTimer* _timer;
    Game* _game;
    Renderer* _renderer;
};

