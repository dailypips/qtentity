#pragma once

#include <QMainWindow>
#include "ui_MainWindow.h"
#include <QtEntity/DataTypes>
#include <QThread>

class Game;
class Renderer;

class MainWindow : public QMainWindow, public Ui_MainWindow
{
    Q_OBJECT

public:

    MainWindow(QWidget* parent = nullptr, Qt::WindowFlags flags = 0);
    ~MainWindow();

protected:

    virtual void closeEvent(QCloseEvent* event);

protected slots:

    void entityAdded(QtEntity::EntityId id, QString name);
    void entityChanged(QtEntity::EntityId id, QString name);
    void entityRemoved(QtEntity::EntityId id);
    void entitySelectionChanged();
    void changeEntityData(QtEntity::EntityId id, const QVariantMap& values);
    void stepGame();
    void addActor();
signals:

    void selectedEntityChanged(QtEntity::EntityId id, const QVariantMap& data);

private:

    Game* _game;
    QThread* _gameThread;
};

